{"ast":null,"code":"var _jsxFileName = \"/home/priyanshu/Desktop/chatter/client/src/Components/chat/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { UserContext } from \"../../UserContext\";\nimport io from \"socket.io-client\";\nimport Message from \"./messages/Message\";\nimport Input from \"./input/Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket;\n\nconst Chat = () => {\n  _s();\n\n  let ENDPT = \"http://localhost:5000/\";\n  const [message, setmessage] = useState(\"\");\n  const [messages, setmessages] = useState([]);\n  const {\n    user,\n    setuser\n  } = useContext(UserContext);\n  let {\n    room_id,\n    room_name\n  } = useParams();\n  useEffect(() => {\n    socket = io(ENDPT, {\n      transports: [\"websocket\"]\n    });\n    console.log(user);\n    socket.emit(\"join\", {\n      room_id,\n      user_id: user._id,\n      name: user.name\n    });\n  }, []);\n  useEffect(() => {\n    socket.on(\"message\", message => {\n      console.log(\"message\", message);\n      console.log(\"messages\", messages);\n      setmessages([...messages, message]);\n    });\n    socket.on(\"output-message\", message => {\n      console.log(\"output message\", message);\n      setmessages(message);\n      console.log(\"msgs\", messages);\n    });\n  }, [messages]);\n\n  const sendMessage = event => {\n    event.preventDefault();\n    console.log(message);\n\n    if (message) {\n      socket.emit(\"sendmessage\", message, room_id, () => {\n        setmessage(\"\");\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [room_id, room_name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Chat \", JSON.stringify(user), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Message, {\n      messages: messages,\n      user_id: user._id,\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      message: message,\n      setmessage: setmessage,\n      sendMessage: sendMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chat, \"m1dm4tDh2QV/OnRoaKAO/HkPkYY=\", false, function () {\n  return [useParams];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/home/priyanshu/Desktop/chatter/client/src/Components/chat/Chat.js"],"names":["React","useContext","useEffect","useState","Link","useParams","UserContext","io","Message","Input","socket","Chat","ENDPT","message","setmessage","messages","setmessages","user","setuser","room_id","room_name","transports","console","log","emit","user_id","_id","name","on","sendMessage","event","preventDefault","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { UserContext } from \"../../UserContext\";\nimport io from \"socket.io-client\";\nimport Message from \"./messages/Message\";\nimport Input from \"./input/Input\";\n\nlet socket;\nconst Chat = () => {\n  let ENDPT = \"http://localhost:5000/\";\n  const [message, setmessage] = useState(\"\");\n  const [messages,setmessages]=useState([]);\n  const { user, setuser } = useContext(UserContext);\n  let { room_id, room_name } = useParams();\n  useEffect(() => {\n    socket = io(ENDPT, { transports: [\"websocket\"] });\n    console.log(user)\n    socket.emit(\"join\", {  room_id, user_id: user._id,name:user.name });\n  }, []);\n\n useEffect(() => {\n     socket.on(\"message\",message=>{\n       console.log(\"message\",message)\n       console.log(\"messages\",messages);\n         setmessages([...messages,message])\n     });\n     socket.on(\"output-message\",message=>{\n       console.log(\"output message\",message)\n       setmessages(message)\n       console.log(\"msgs\",messages)\n       \n     })\n\n },[messages])\n\n  const sendMessage = (event) => {\n      event.preventDefault();\n    console.log(message);\n    if (message) {\n      socket.emit(\"sendmessage\",message,room_id, () => {\n        setmessage(\"\");\n      });\n    }\n  };\n\n  return (\n    <div>\n      <p>\n        {room_id}\n        {room_name}\n      </p>\n      <h1>Chat {JSON.stringify(user)} </h1>\n      <Message messages={messages} user_id={user._id} user={user} />\n      {/* {JSON.stringify(messages,null,\"\\t\")} */}\n      <Input message={message} setmessage={setmessage} sendMessage={sendMessage} />\n    </div>\n  );\n};\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}